#
# Compile all MQL programs and create a ZIP file with the compiled binaries.
#
# TODO:
# - add file filter
# - cache MetaEditor
#
name: Compile MQL programs

on:
  push:
    branches:
      - master
      - development

permissions:
  contents: read

jobs:
  # ----------------------------------------------------------------------------------------------------------------------------------------
  compile:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup MetaEditor
        env:
          METAEDITOR_URL: ${{ secrets.MT5_METAEDITOR_URL }}
          AUTH_USERNAME:  ${{ secrets.MT5_METAEDITOR_AUTH_USERNAME }}
          AUTH_PASSWORD:  ${{ secrets.MT5_METAEDITOR_AUTH_PASSWORD }}
        run: |
          echo "Downloading MetaEditor..."
          curl -o metaeditor64.exe --digest -u "$AUTH_USERNAME:$AUTH_PASSWORD" "$METAEDITOR_URL" --silent --fail --show-error --connect-timeout 10 --max-time 60
          echo MetaEditor version $(powershell -NoProfile -NonInteractive -Command "(Get-Item metaeditor64.exe).VersionInfo.FileVersion")

      - name: Compile files
        run: |
          echo "Compiling MQL files..."
          ERROR=0

          while IFS= read -r FILE; do
            MetaEditorCmd=".\\metaeditor64.exe /portable /compile:\"$FILE\" /log"
            echo '@echo off'       > helper.bat
            echo "$MetaEditorCmd" >> helper.bat

            # MetaEditor returns the number of successfully compiled files (0 = error)
            if MSYS_NO_PATHCONV=1 cmd.exe /c .\\helper.bat < /dev/null; then
              echo "error: $FILE"
              iconv -c -f UTF-16 -t UTF-8 "${FILE%.*}.log" | tr -d '\r' | grep -v -e '^$'
              echo
              ERROR=1
            else
              echo "success: $FILE"
              rm -f "${FILE%.*}.log"
            fi
          done < <(find . -type f -name '*.mq5')

          echo "GITHUB_REPOSITORY_NAME=${GITHUB_REPOSITORY##*/}" >> "$GITHUB_ENV"
          echo "TIMESTAMP=$(date +'%Y.%m.%d-%H.%M.%S')"          >> "$GITHUB_ENV"
          exit $ERROR

      - name: Upload compiled files
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.GITHUB_REPOSITORY_NAME }}-${{ env.TIMESTAMP }}.bin
          path: |
            mql*/**/*.mq[h5]
            mql*/**/*.ex5
            mql*/**/*.log

  # ----------------------------------------------------------------------------------------------------------------------------------------
