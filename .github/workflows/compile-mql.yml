#
# Compile all MQL programs and create a ZIP file with sources and compiled binaries.
#
# TODO:
# - cache the compilers
#
name: Compile MQL programs

on:
  push:
    branches:
      - feature/mql-cross-compiler

permissions:
  contents: read

jobs:
  compile-mql:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Check commit message for "[skip ci]"
        run: |
          SKIP_CI=false
          [[ "$GITHUB_EVENT_NAME" == "push" ]] && REF_NAME="$GITHUB_REF_NAME" || { echo "unsupported ci event: $GITHUB_EVENT_NAME"; exit 1; }
          COMMIT_MSG="$(git log -1 --format="%B" "origin/$REF_NAME")"
          MAGIC_KEY="$(echo "$COMMIT_MSG" | (grep -io "\[skip ci\]" || :) | tail -1)"
          [[ -n "$MAGIC_KEY" ]] && { echo "Magic commit message found: $MAGIC_KEY"; SKIP_CI=true; }
          echo "Skip CI: $SKIP_CI"
          echo "SKIP_CI=$SKIP_CI" >> "$GITHUB_ENV"

      - name: Setup compilers
        if:   env.SKIP_CI != 'true'
        env:
          MT4_METALANG_URL:   ${{ secrets.MT4_METALANG_URL }}
          MT4_METAEDITOR_URL: ${{ secrets.MT4_METAEDITOR_URL }}
          AUTH_USERNAME:      ${{ secrets.MT4_URL_AUTH_USERNAME }}
          AUTH_PASSWORD:      ${{ secrets.MT4_URL_AUTH_PASSWORD }}
        run: |
          echo "Downloading MT4 compiler..."
          curl -o metalang.exe --digest -u "$AUTH_USERNAME:$AUTH_PASSWORD" "$MT4_METALANG_URL" --silent --fail --show-error --connect-timeout 10 --max-time 60
          echo "MT4_METALANG=$(cygpath -m "$(realpath ./metalang.exe)")" >> "$GITHUB_ENV"
          MSYS_NO_PATHCONV=1 cmd.exe /c 'mklink /D experts mql40'

          echo "Downloading MT4 MetaEditor..."
          curl -o metaeditor.exe --digest -u "$AUTH_USERNAME:$AUTH_PASSWORD" "$MT4_METAEDITOR_URL" --silent --fail --show-error --connect-timeout 10 --max-time 60
          echo "MT4_METAEDITOR=$(cygpath -m "$(realpath ./metaeditor.exe)")" >> "$GITHUB_ENV"

      - name: Compile MQL files
        if:   env.SKIP_CI != 'true'
        run: |
          bin/mqlc -v=mql40 mql40/experts mql40/experts/tools mql40/indicators mql40/indicators/.attic mql40/scripts mql40/libraries \
                   -v=mql45 mql45/experts mql45/indicators mql45/scripts mql45/libraries /include:"mql45"
          rm -fv experts
          echo "TIMESTAMP=$(date +'%Y.%m.%d_%H.%M')" >> "$GITHUB_ENV"

      - name: Upload compiled files
        if:   env.SKIP_CI != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: rosasurfer-mt4-mql-${{ env.TIMESTAMP }}.bin
          path: |
            mql*/**/*.mq[h4]
            mql*/**/*.ex4
