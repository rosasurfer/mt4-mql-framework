#
# Compile all MQL programs and create a ZIP file with sources and compiled binaries.
#
# TODO:
# - cache the compilers
#
name: Compile MQL programs

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

permissions:
  contents: read

jobs:
  compile-mql:
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0                                # fetch all branches and history (to access the source branch of PRs)

      - name: Check commit message for "[skip ci]"
        run: |
          SKIP_CI=false
          REF_NAME=
          [[ "$GITHUB_EVENT_NAME" == "push"         ]] && REF_NAME="$GITHUB_REF_NAME"
          [[ "$GITHUB_EVENT_NAME" == "pull_request" ]] && REF_NAME="$GITHUB_HEAD_REF"
          [[ -z "$REF_NAME" ]] && { echo "ERROR: unsupported CI event: $GITHUB_EVENT_NAME"; exit 1; }

          COMMIT_MSG="$(git log -1 --format="%B" "origin/$REF_NAME")"
          grep -iq '\[skip ci\]' <<< "$COMMIT_MSG" && { echo "Magic commit message found: [skip ci]"; SKIP_CI=true; }
          echo "Skip CI: $SKIP_CI"
          echo "SKIP_CI=$SKIP_CI" >> "$GITHUB_ENV"

      - name: Setup compilers
        if:   env.SKIP_CI != 'true'
        env:
          MT4_METALANG_URL:   ${{ secrets.MT4_METALANG_URL }}
          MT4_METAEDITOR_URL: ${{ secrets.MT4_METAEDITOR_URL }}
          AUTH_USERNAME:      ${{ secrets.MT4_URL_AUTH_USERNAME }}
          AUTH_PASSWORD:      ${{ secrets.MT4_URL_AUTH_PASSWORD }}
        run: |
          echo "Downloading MT4 compiler from https://.../mt4/${MT4_METALANG_URL#*/mt4/}"
          curl -o metalang.exe --digest -u "$AUTH_USERNAME:$AUTH_PASSWORD" "$MT4_METALANG_URL" --silent --fail --show-error --connect-timeout 10 --max-time 60
          echo "MT4_METALANG=$PWD/metalang.exe" >> "$GITHUB_ENV"

          echo "Downloading MT4 MetaEditor from https://.../mt4/${MT4_METAEDITOR_URL#*/mt4/}"
          curl -o metaeditor.exe --digest -u "$AUTH_USERNAME:$AUTH_PASSWORD" "$MT4_METAEDITOR_URL" --silent --fail --show-error --connect-timeout 10 --max-time 60
          echo "MT4_METAEDITOR=$PWD/metaeditor.exe" >> "$GITHUB_ENV"

      - name: Compile MQL files
        if:   env.SKIP_CI != 'true'
        run: |
          TRACE=1 \
          bin/mqlc -v=mql40 /inc:mql40 mql40/experts mql40/experts/tools mql40/indicators mql40/indicators/.attic mql40/scripts mql40/libraries \
                   -v=mql45 /inc:mql45 mql45/experts mql45/indicators mql45/scripts mql45/libraries \
                   --warn2error
          echo "TIMESTAMP=$(date +'%Y.%m.%d_%H.%M')" >> "$GITHUB_ENV"

      - name: Store compiled files
        if:   env.SKIP_CI != 'true'
        uses: actions/upload-artifact@v4
        with:
          name: rosasurfer-mt4-mql-${{ env.TIMESTAMP }}.bin
          path: |
            mql*/**/*.dll
            mql*/**/*.ex[e4]
            mql*/**/*.mq[h4]
